name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        type: string
jobs:
  get_release_info_job:
    name: Get Release Info
    runs-on: ubuntu-latest
    outputs:
      version: ${{ env.version }}
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ env.tag_name }}
    steps:
      - uses: actions/checkout@v4
      - id: get_release_info
        name: Get Release Info
        shell: bash
        run: |
          version="${{ inputs.version }}"
          tagName="release-v$version"
          releaseName="Release $version"
          echo "Version: $version"
          echo "Tag Name: $tagName"
          echo "version=$version" >> $GITHUB_ENV
          echo "tag_name=$tagName" >> $GITHUB_ENV
          echo "release_name=$releaseName" >> $GITHUB_ENV

      - name: Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.tag_name }}
          name: ${{ env.tag_name }}
          draft: false
          prerelease: false  
          make_latest: true

  release_windows_job:
    name: Release Windows
    runs-on: windows-latest
    needs: get_release_info_job
    steps:
      - name: Print Debug Info
        shell: bash
        run: |
          echo "Version: ${{ needs.get_release_info_job.outputs.version }}"
          echo "Release Upload URL: ${{ needs.get_release_info_job.outputs.release_upload_url }}"

      - uses: actions/checkout@v4

      - id: get_this_release_info
        shell: bash
        run: |
          artifactPath="FBX-glTF-conv-${{ needs.get_release_info_job.outputs.version }}-win32.tgz"
          echo "artifact_path=$artifactPath" >> $GITHUB_ENV
      
      - id: build
        name: Build
        run: CI/build.sh -Version "${{ needs.get_release_info_job.outputs.version }}" -ArtifactPath "${{ env.artifact_path }}"
        shell: bash
      
      - name: Upload to Release
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.artifactPath }}
          asset_name: ${{ env.artifactPath }}
          tag: ${{ needs.get_release_info_job.outputs.tag_name }}

  release_darwin_job:
    name: Release MacOS
    runs-on: macos-latest
    needs: get_release_info_job
    steps:
      - name: Print Debug Info
        shell: bash
        run: |
          echo "Version: ${{ needs.get_release_info_job.outputs.version }}"
          echo "Release Upload URL: ${{ needs.get_release_info_job.outputs.release_upload_url }}"

      - uses: actions/checkout@v4
      
      - id: get_this_release_info
        run: |
          osName=$(uname | tr '[:upper:]' '[:lower:]')
          artifactPath="FBX-glTF-conv-${{ needs.get_release_info_job.outputs.version }}-$osName.tgz"
          echo "artifact_path=$artifactPath" >> $GITHUB_ENV
      
      - id: build
        name: Build
        run: CI/build.sh -Version "${{ needs.get_release_info_job.outputs.version }}" -ArtifactPath "${{ env.artifact_path }}"
      
      - name: Upload to Release
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.artifactPath }}
          asset_name: ${{ env.artifactPath }}
          tag: ${{ needs.get_release_info_job.outputs.tag_name }}

  release_types_job:
    name: Release TypeScript Declaration Files
    runs-on: ubuntu-latest
    needs: get_release_info_job
    steps:
      - name: Print Debug Info
        run: |
          echo "Version: ${{ needs.get_release_info_job.outputs.version }}"
          echo "Release Upload URL: ${{ needs.get_release_info_job.outputs.release_upload_url }}"
      
      - uses: actions/checkout@v4
      
      - id: get_this_release_info
        run: |
          artifactPath="FBX-glTF-conv-${{ needs.get_release_info_job.outputs.version }}-types.tgz"
          echo "artifact_path=$artifactPath" >> $GITHUB_ENV
      
      - id: build
        name: Build
        run: tar -czvf "${{ env.artifact_path }}" -C types . 
        shell: bash
      
      - name: Upload to Release
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.artifactPath }}
          asset_name: ${{ env.artifactPath }}
          tag: ${{ needs.get_release_info_job.outputs.tag_name }}

  publish_to_npm_job:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [release_windows_job, release_darwin_job, release_types_job]
    steps:
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          run_id: ${{ github.event.workflow_run.id }}
          
      - name: Show downloaded files
        run: ls -la
      
      # - name: Copy files to publish directory
      #   run: |
      #     ls -l publish/

      # - uses: JS-DevTools/npm-publish@4b07b26a2f6e0a51846e1870223e545bae91c552
      #   if: github.event_name == 'release'
      #   with:
      #     token: ${{ secrets.NPM_PUBLISH }}
      #     registry: "https://registry.npmjs.org"
      #     package: publish