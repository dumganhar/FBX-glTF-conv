name: Release
on:
  pull_request:
    branches:
      - '**'
  push:
    path:
      - '**'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        type: string
jobs:
  get_release_info_job:
    name: Get Release Info
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_release_info.outputs.version }}
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Release Info
        id: get_release_info
        run: |
          version="${{ inputs.version }}"
          tagName="release-v$version"
          releaseName="Release $version"
          
          echo "Version: $version"
          echo "Tag Name: $tagName"

          echo "version=$version" >> $GITHUB_ENV
          echo "tag_name=$tagName" >> $GITHUB_ENV
          echo "release_name=$releaseName" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_release_info.outputs.tag_name }}
          release_name: ${{ steps.get_release_info.outputs.release_name }}
          draft: true
          prerelease: true


  release_windows_job:
    name: Release Windows
    runs-on: windows-latest
    needs: get_release_info_job
    steps:
      - name: Print Debug Info
        shell: pwsh
        run: |
          Write-Host @"
          Version: ${{ needs.get_release_info_job.outputs.version }}
          Release Upload URL: ${{ needs.get_release_info_job.outputs.release_upload_url }}
          "@
      - uses: actions/checkout@v2
      - id: get_this_release_info
        shell: pwsh
        run: |
          #Requires -Version "6.1"
          $osName = if ($IsWindows) { "win32" } elseif ($IsLinux) { "ubuntu" } else { "darwin" }
          $artifactPath = "FBX-glTF-conv-${{ needs.get_release_info_job.outputs.version }}-$osName.zip"
          Write-Output "::set-output name=artifact_path::$artifactPath"
      - id: build
        name: Build
        run: CI/build.sh -Version "${{ needs.get_release_info_job.outputs.version }}" -ArtifactPath "${{ steps.get_this_release_info.outputs.artifact_path }}"
        shell: bash
      - id: upload-release-asset
        name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.get_release_info_job.outputs.release_upload_url }}
          asset_path: ${{ steps.get_this_release_info.outputs.artifact_path }}
          asset_name: ${{ steps.get_this_release_info.outputs.artifact_path }}
          asset_content_type: application/zip

  release_darwin_job:
    name: Release MacOS
    runs-on: macos-11
    needs: get_release_info_job
    steps:
      - name: Print Debug Info
        shell: pwsh
        run: |
          Write-Host @"
          Version: ${{ needs.get_release_info_job.outputs.version }}
          Release Upload URL: ${{ needs.get_release_info_job.outputs.release_upload_url }}
          "@
      - uses: actions/checkout@v2
      - id: get_this_release_info
        shell: pwsh
        run: |
          #Requires -Version "6.1"
          $osName = if ($IsWindows) { "win32" } elseif ($IsLinux) { "ubuntu" } else { "darwin" }
          $artifactPath = "FBX-glTF-conv-${{ needs.get_release_info_job.outputs.version }}-$osName.zip"
          Write-Output "::set-output name=artifact_path::$artifactPath"
      - id: build
        name: Build
        run: CI/build.sh -Version "${{ needs.get_release_info_job.outputs.version }}" -ArtifactPath "${{ steps.get_this_release_info.outputs.artifact_path }}"
        shell: bash
      - id: upload-release-asset
        name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.get_release_info_job.outputs.release_upload_url }}
          asset_path: ${{ steps.get_this_release_info.outputs.artifact_path }}
          asset_name: ${{ steps.get_this_release_info.outputs.artifact_path }}
          asset_content_type: application/zip

  # release_ubuntu_job:
  #   name: Release Ubuntu
  #   runs-on: ubuntu-latest
  #   needs: get_release_info_job
  #   steps:
  #     - name: Print Debug Info
  #       shell: pwsh
  #       run: |
  #         Write-Host @"
  #         Version: ${{ needs.get_release_info_job.outputs.version }}
  #         Release Upload URL: ${{ needs.get_release_info_job.outputs.release_upload_url }}
  #         "@
  #     - uses: actions/checkout@v2
  #     - id: get_this_release_info
  #       shell: pwsh
  #       run: |
  #         #Requires -Version "6.1"
  #         $osName = if ($IsWindows) { "win32" } elseif ($IsLinux) { "ubuntu" } else { "darwin" }
  #         $artifactPath = "FBX-glTF-conv-${{ needs.get_release_info_job.outputs.version }}-$osName.zip"
  #         Write-Output "::set-output name=artifact_path::$artifactPath"
  #     - id: build
  #       name: Build
  #       run: CI/GitHubBuild.ps1 -Version "${{ needs.get_release_info_job.outputs.version }}" -ArtifactPath "${{ steps.get_this_release_info.outputs.artifact_path }}"
  #       shell: pwsh
  #     - id: upload-release-asset
  #       name: Upload Release Asset
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ needs.get_release_info_job.outputs.release_upload_url }}
  #         asset_path: ${{ steps.get_this_release_info.outputs.artifact_path }}
  #         asset_name: ${{ steps.get_this_release_info.outputs.artifact_path }}
  #         asset_content_type: application/zip

  release_types_job:
    name: Release TypeScript Declaration Files
    if: github.event_name == 'workflow_dispatch'
    runs-on: windows-latest
    needs: get_release_info_job
    steps:
      - name: Print Debug Info
        shell: pwsh
        run: |
          Write-Host @"
          Version: ${{ needs.get_release_info_job.outputs.version }}
          Release Upload URL: ${{ needs.get_release_info_job.outputs.release_upload_url }}
          "@
      - uses: actions/checkout@v2
      - id: get_this_release_info
        shell: pwsh
        run: |
          #Requires -Version "6.1"
          $artifactPath = "FBX-glTF-conv-${{ needs.get_release_info_job.outputs.version }}-types.zip"
          Write-Output "::set-output name=artifact_path::$artifactPath"
      - id: build
        name: Build
        run: Compress-Archive -Path "types\*" -DestinationPath "${{ steps.get_this_release_info.outputs.artifact_path }}"
        shell: pwsh
      - id: upload-release-asset
        name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.get_release_info_job.outputs.release_upload_url }}
          asset_path: ${{ steps.get_this_release_info.outputs.artifact_path }}
          asset_name: ${{ steps.get_this_release_info.outputs.artifact_path }}
          asset_content_type: application/zip
